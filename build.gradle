buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.grails:grails-gradle-plugin:2.1.0'
        // classpath 'com.github.kulya:jmeter-gradle-plugin:1.3.2-2.9'
    }
}

apply plugin: 'grails'
apply plugin: 'jacoco'
// apply plugin: 'jmeter'

version = 1.0

grails {
    grailsVersion = '2.3.7'
    groovyVersion = '2.1.9'
    springLoadedVersion = '1.2.0.RELEASE'
}

jacoco {
    toolVersion = '0.7.2.201409121644'
}

repositories {
    mavenLocal()
    maven {
        url 'https://www.owfgoss.org/nexus/content/groups/public'
    }
    jcenter()
    grails.central()
}

dependencies {

    runtime 'mysql:mysql-connector-java:5.1.32'
    runtime 'javax.ws.rs:jsr311-api:1.1.1'

    compile 'org.springframework.security:spring-security-core:3.2.5.RELEASE'
    compile 'commons-validator:commons-validator:1.4.0'
    compile 'com.google.guava:guava:18.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.3.3'
    compile 'com.damnhandy:handy-uri-templates:2.0.2'



    bootstrap 'org.grails.plugins:tomcat:7.0.54'

    // test 'org.grails.plugins:code-coverage:2.0.3-2'
    test 'org.grails.plugins:build-test-data:1.1.0'
    test 'org.grails.plugins:codenarc:0.20'
    test 'org.grails.plugins:gmetrics:0.3.1'

    compile 'org.grails.plugins:elasticsearch:0.0.2.6'
    compile 'org.grails.plugins:executor:0.3'
    compile 'org.grails.plugins:feeds:1.6'
    compile 'org.grails.plugins:quartz:1.0.1'
    compile 'org.grails.plugins:pretty-time:2.1.3.Final-1.0.1'
    compile 'org.grails.plugins:cache:1.1.5'
    compile 'org.grails.plugins:hibernate:3.6.10.12'

    compile 'org.ozoneplatform:ozone-auditing:1.2.1'
    compile 'org.ozoneplatform:audit-trail:2.0.3-SNAPSHOT'

    runtime 'org.grails.plugins:database-migration:1.4.0'
    runtime 'org.grails.plugins:cors:1.1.4'
    runtime 'org.grails.plugins:jaxrs:0.10'
}

test {
    phases = ['unit:']

    jvmOptions {
        minHeapSize = '512m'
        maxHeapSize = '1g'
        jvmArgs([
            '-XX:MaxPermSize=512m',
            "-javaagent:lib/jacocoagent.jar=output=file,destfile=${buildDir}/jacoco/jacoco.exec,classdumpdir=${buildDir}/jacoco/classdumps"
        ])
    }
}

// task unitTestCoverageReports(type:JacocoReport){
//     executionData files("${buildDir}/jacoco/jacoco.exec")
//     sourceDirectories = files([
//         "src/groovy/**","src/java/**", "grails-app/providers/**",
//         "grails-app/resources/**", "grails-app/domain/**"
//     ])
//     classDirectories = files("${buildDir}/classes")
// }
